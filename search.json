[
  {
    "objectID": "Lab_01.html",
    "href": "Lab_01.html",
    "title": "Lab 01",
    "section": "",
    "text": "Learning Outcomes\nAt the end of this practical students should be able to:\n\nuse Microsoft Word for writing equations\nuse Excel and R to calculate simple summary statistics\nUnderstand the link between R and R Markdown\nProduce your own knitted Markdown document"
  },
  {
    "objectID": "Lab_01.html#getting-started-excel-and-r",
    "href": "Lab_01.html#getting-started-excel-and-r",
    "title": "Lab 01",
    "section": "",
    "text": "Learning Outcomes\nAt the end of this practical students should be able to:\n\nuse Microsoft Word for writing equations\nuse Excel and R to calculate simple summary statistics\nUnderstand the link between R and R Markdown\nProduce your own knitted Markdown document"
  },
  {
    "objectID": "Lab_01.html#before-you-begin",
    "href": "Lab_01.html#before-you-begin",
    "title": "Lab 01",
    "section": "Before you begin",
    "text": "Before you begin\nMake sure you have access to:\n\nMicrosoft Word and Excel\nR and RStudio\nThe dataset for today: Lead_content.csv (download from lab page)"
  },
  {
    "objectID": "Lab_01.html#settling-in",
    "href": "Lab_01.html#settling-in",
    "title": "Lab 01",
    "section": "Settling in",
    "text": "Settling in\nIn the last two years we have seen big changes, especially in the student experience, making it harder to build connections, even limiting that sense of being part of the University. Everybody deserves to feel a sense of belonging, especially in such an important and exciting stage of their lives.\nAt the beginning of the next few weeks we will be doing some short activities before getting into the Stats to help you foster a sense of belonging, learn more about your peers, and help better prepare you for your studies. This week we will start with a simple introduction, but before we do this, we would like to acknowledge those who were here before us:\n\nWe would like to acknowledge and pay respect to the traditional owners of the land on which we meet; the Gadigal people of the Eora Nation. It is upon their ancestral lands that the University of Sydney is built. As we share our own knowledge, teaching, learning and research practices within this university may we also pay respect to the knowledge embedded forever within the Aboriginal Custodianship of Country.\n\n\nTo learn more about why we do Acknowledgement of Country, and the difference to Welcome to Country, see the following page: Welcome and Acknowledgement.\n\nAnswerGardens\nWe are all from diverse backgrounds and have followed different paths to get to where we are today. To help you get to know your peers, your demonstrator will lead a class discussion, posting a number of questions on AnswerGarden, where you can then anonymously post your answer to the questions. Links will be provided once your demonstrator has set up the question.\nAfter about 20 minutes of discussion, we can get started on the Stats! Welcome to ENVX1002!"
  },
  {
    "objectID": "Lab_01.html#exercises",
    "href": "Lab_01.html#exercises",
    "title": "Lab 01",
    "section": "Exercises",
    "text": "Exercises\n\n1. Equations in MS Word\nSpecialised software is needed to write out equations when writing documents and reports. One option is Microsoft Equation Editor which comes as part of Microsoft Word.\nIn a word document click your cursor on the Equation icon outlined in red in the screenshot below.\n\n\n\nScreenshot of Excel Equation tool highlighted\n\n\nThis will open up a menu (see screenshot below) for writing equations which is quite intuitive for most forms of equations.\n\n\n\nScreenshot of Excel Equation menu with Large Operator & Accent highlighted\n\n\nThe screenshot has outlined some less intuitive parts of equation you will need, the red outline is for equations requiring sigma notation (\\sigma) such as the population variance, and outline in blue is for equations with accents such y-bar (\\bar{y})for the sample mean and y-tilde (\\tilde{y}) for the sample median.\nUse MS Word to type the following equations\n\nMean:\\bar{x} = \\frac{1}{n} \\sum_{i=1}^{n}x_{i}\nVariance:\\sigma^{2} = \\frac{\\sum\\limits_{i=1}^{n} \\left(x_{i} - \\bar{x}\\right)^{2}} {n-1}\nThe equation for a straight line\n\n\n\n2. Introduction to MS Excel\nExcel has limited statistical capabilities but is quite useful for storing and manipulating small datasets. Due to the global dominance of MS Windows it is also the most commonly used format for storing and distributing data within workplaces.\n\nExcel worksheets and cells\nExcel files come in series of worksheets where data is stored in cells. The columns are given letters and the rows are given numbers, enabling a particular cell to be referenced by a combination a letter and number. In the screenshot below the number 2 in the orange cell could be referenced by B3. In a blank worksheet type 2 in the B3 cell.\nIn cell C3 type =B3\nThe equals sign tells Excel you are calculating something or referring to a cell. You should now have 2 in cell C3.\n\n\n\nScreenshot of Excel Typing number 2 in cell B3\n\n\nAt the bottom of the Excel page you will see references to each of the worksheets in the file, for example ‘Sheet1’, ‘Sheet2’, ‘Sheet3’. This enables you to store multiple datasets in the one file. In this unit the datasets for each exercise will be stored in separate worksheets but in the same file.\n\n\nBasic arithmetic\nWhen typing equations, make sure you start by typing = . This tells Excel you want to solve the input equation.\nThe basic arithmetic operators return numeric values:\n\n\n\nKey\nOperation\n\n\n\n\n+\nAddition\n\n\n-\nsubtraction\n\n\n*\nMultiplication\n\n\n/\nDivision\n\n\n^\nExponentiation\n\n\n\nThese can be used in combination with numbers or cell references.\nFor example, to get a value of 4 in cell D3 you can type either\n=2*2 (type numbers)\nor\n=B3*C3 (reference cells)\nIt is better to reference cells so that if you change the values the same equations can be applied.\n\n\n\nBasic functions\nSome basic functions are:\n\n\n\nFunction\nOperation\n\n\n\n\nSUM\nSums a range of cells\n\n\nCOUNT\nCounts a range of cells\n\n\nLN\nNatural Log\n\n\nEXP\nExponent\n\n\n\nThese can be used in combination with numbers or cell references.\nFor example in cell E3 you can type either\n=EXP(4) or =EXP(D3),\nAnother example is in cell F3 type\n=COUNT(B3:D3)\nNote that Excel has an auto-complete function that allows you to select from a list of functions after typing the first letter i.e. =C. Selecting the function gives a brief description of what the function does.\n\n\n\nScreenshot of Excel Typing =C to show function description\n\n\nOnce the function has been selected, you can proceed to type the opening bracket and enter in the cell reference, cell range or numeric value. Excel aids you in showing what the required input is as you type the opening bracket (see image below). The square bracket indicates an optional value, in this case if only one cell is selected =COUNT(E3), then the function will return the value 1.\n\n\n\nScreenshot of Excel showing required input arguments for COUNT function\n\n\n\n\n\nSimple summary statistics\nThere are functions for calculating summary statistics in Excel. Click on a cell where you want the answer to be entered and then use the menu by Formulas &gt;&gt; Insert Function. A screenshot for calculating the sum is shown below.\n\n\n\nScreenshot of Excel Insert Function\n\n\nOn the next screen you can then select the cells where the observations are located from which then median will be calculated.\nAfter a while you should get to know the name of the functions in Excel and be able to write the arguments in manually. In the screenshot below the function is MEDIAN and it refers to cells between (and including) A2 and A9. A row or column of cells can be represented by the starting cell, then colon, then final cell (A2:A9).\n\n\n\nScreenshot of Excel calculating the Median of cells A2 to A9\n\n\nSome of examples of the functions that can be accessed in Excel are shown below. Note that the .S and .P extensions for variance and standard deviation are from later excel versions.\n\n\n\nStatistic\nFunction\n\n\n\n\nMinimum\n=MIN\n\n\nMaximum\n=MAX\n\n\nArithmetic mean\n=AVERAGE( )\n\n\nMedian\n=MEDIAN( )\n\n\npopulation variance\n=VAR.P()\n\n\nSample variance\n=VAR( ) or =VAR.S()\n\n\nPopulation standard deviation\n=STDEV.P()\n\n\n\n\n\n\nCalculating simple summary statistics in Excel\nIn this exercise you will use the Lead_content.csv (dowload from lab page)\nThis data was collected from a recreational parkland in Sydney and is a measurement of the lead concentration (mg/kg) detected in the soil, measured through chemical analysis (ICP-OES). There are a total of 60 samples collected from around the park. The park was originally a municipal landfill but remediated in 1990, so we expected to find low levels of lead. The guide value set by the Australian Government is 300 mg/kg and this is where further investigation is needed (potential to cause harm).\nIn excel, calculate the following:\n\nminimum value\nMaximum value\nmean\nmedian\nrange\nsample variance\nsample standard deviation\n\nFrom these statistics,\n\nWere there any samples higher than the guide value?\nWere there any samples where no lead was detected?\nWhat is the mean value?\n\n\n\n\n3. Introduction to R coding\nR is a statistical programming language that can be used to store, manipulate, visualise and analyse data. It contains a number of pre-defined analysis techniques but you can also program your own methods.\nR is open source which means that you can examine and modify the raw software code if you like. A worldwide collective of scientists, programmers and statisticians are working on improving and extending the capabilities of R.\nOf immediate value to you is that it is free so for the rest of your career you can keep using R without burdening future employers with software licence fees. An article on the merits of R can be found by at (http://monkeysuncle.stanford.edu/?p=367).\nThis module will provide an introduction to R. Work through the examples by typing in all code you see to familiarise yourself with the syntax of R and some of the commands available in R.\n\nGetting a copy of R\nR is free and downloadable from (https://cran.r-project.org/). Ths screenshot below shows the site where you can download the installation needed for your operating system.\n\n\n\nCRAN website\n\n\n\n\n\nR basics\nTo begin open R from the program files menu on your computer. When you open R, a window containing the R console will open. It will look slightly different depending on the operating system you use. The screenshot is from a Mac.\n\n\n\nThe R Console\n\n\nAt the bottom of the screen is the command prompt &gt;. Commands are typed at the command prompt and followed by the ENTER key.\nFrom now type all the command you see into R. If you type in an expression, when you hit the ENTER key, the expression will be evaluated and the result returned, lets add 5 and 5 together.\n\n5+5\n\n[1] 10\n\n\nR is an object-oriented programming language and the basic unit in R is called an object. Objects can store single numbers, columns of data, modelling output, functions and other kinds of information.\nThe class of the object determines the way in which commands are executed on an object and the way in which data can be stored by the object. For example, vectors store a single column of data, a matrix can store multiple columns of data and a data frame can store multiple columns of data where the columns may be of different data types (e.g. numeric and logical).\nWhen you type in an expression and hit the ENTER key, the expression is evaluated and the result returned:\n\n5+5\n\n[1] 10\n\n\nAlternatively, the value returned by calling a function in R can be saved as a named object using the assignment operator &lt;-.\n\nmyData &lt;- 5+5\n\nYou can view the contents of an object by typing the object name:\n\nmyData\n\nWhen you hit the RETURN Key, you will see the following output:\n\n\n[1] 10\n\n\nObject names can be made up of letters, numbers and , and _ symbols. A name must start with . or a letter. If it starts with . the second character must not be a number. R is case sensitive, so calling mydata is not the same as myData and will generate an error:\n\nmydata\n\nError in eval(expr, envir, enclos): object 'mydata' not found\n\n\nTo see a list of all the named objects you’ve created in R, use the objects function:\n\nobjects()\n\n[1] \"myData\"          \"pandoc_dir\"      \"quarto_bin_path\"\n\n\nTo delete an object, use the remove function:\n\nremove(myData)\n\nIf you type and enter an incomplete command, a continuation prompt will appear on the next line: +. You can continue typing the command followed by the ENTER Key.\n\nmyData3 &lt;-\n+ 8\n\nTo cancel a command at the continuation prompt (or during execution of a command), press the ESC key. The up and down arrow keys can be used to scroll through previous commands. Comments can be indicated by a hash mark (#) - everything on the line following the hash mark will be ignored by R. This can be after R code on a line or on a separate line as shown below.\n\n#I am adding 6+6 and saving it to an object called my.Data\nmy.Data &lt;- 6+6\n\n\n\n\nBasic arithmetic\nThe symbols for basic arithmetic operators are shown in the table below.\n\n\n\n\n\nOperators\nOperation\n\n\n\n\n+\naddition\n\n\n-\nsubtraction\n\n\n*\nmultiplication\n\n\n/\ndivision\n\n\n^ or **\nexponentiation\n\n\n\n\n\nParentheses ( ) can be used to specify order of operations.\nYou can perform basic calculations by typing expressions into the command line.\n\n(5*10) ^2\n\n[1] 2500\n\n\nBetter still you can assign results to a named object to be used at a later date.\n\nmyresult &lt;- 20/10 + 6 - 1\n\nFor example, We can then halve the value of myresult.\n\nmyresult &lt;- myresult/2\n\n\n\n\nText editors\nUntil now you have copied and pasted commands which you may wish to use again. This is particularly important as you begin to write series of commands to perform a certain task. One option is to save these commands to text files and copy the relevant commands into R as needed. You can save logical groupings of commands into different text files.\nA better option is to use text editors – one example is RStudio and unlike notepad it allows syntax highlighting of R commands. When an R session is open, RStudio includes an additional menu and toolbar and it allows the user to interact with R by submitting code in whole or in part. It is available from (https://www.rstudio.com/products/rstudio-desktop/).\nFrom now on you should start to use RStudio by copying the commands into a R file and then submitting them to R. By doing this you will have a record of the commands you have used. From now you will be using R through RStudio and not the console. Over time you will develop a library of code to perform analyses and create graphics.\nThe screenshot below shows RStudio, the top left window shows your code and the bottom left window shows the input and output in R. The top right hand window side shows the objects you have created, for example myData. The bottom left hand corner shows graphics, in this case a histogram, but can also show other useful features such as the help menu.\n\n\n\nR Studio\n\n\n\n\n\nSimple data analysis\nGo to the eLearning site and download and open the file Code_Topic1.r and you will see most of the commands you have been typing. Rather than typing commands into R we will now start to use R Studio. You will see the commands you entered until now are all there.\nYou send code from your open R file which is in the top left hand corner of your R Studio program to the R console which is found in the bottom left hand corner of the R Studio. The output, e.g. the mean, will also appear in the bottom left hand window.\nTo send a line of code to R from your R file (the Code_Topic1.r file), click anywhere in the line and click on the Run icon or use the short cut CTRL+ENTER (short cut for Windows only). Then R studio will move to the next line in your script. The output is shown in the bottom left hand window.\nYou can also use the # symbol to write comments which R will ignore. It is recommended you copy the output into your R file and comment it out so you have a complete record of your work.\n\n\n\nGetting data into R\nR can accept data from many different sources; for example directly from scientific instruments or even scraping the internet for data. In this topic we are only considering small datasets so we will enter the data manually via the keyboard.\nA vector (or list) of numbers can be manually entered using the assignment operator and the c function which essentially means combine, an example is below.\n\nmyDataset &lt;- c(5,12,52,32,14,6.1)\n\nUse the c function to enter a soil carbon dataset (48, 56, 90, 78, 86, 71, 42) as an object called Carbon. We will then calculate some basic statistics on this dataset.\n\n\nSummary statistics\nNow we have entered the data in R we want to do something with it, such as calculate summary statistics. R functions behave differently depending on the data type. Some functions will work only on specific data types, other functions will use different methods on different data types.\n\n\n\nTo find the mean of dataset we use the mean function.\n\nmean(Carbon)\n\n[1] 67.28571\n\n\nOther commands related to summary statistics include:\n\nmedian - median\nvar - sample variance\nsd - sample standard deviation\nmin - minimum value\nmax - maximum value\nlength - number of observations (length of the vector)\n\nCalculate all of the statistics above using R.\n\nmedian(Carbon)\n\n[1] 71\n\nvar(Carbon)\n\n[1] 355.5714\n\nsd(Carbon)\n\n[1] 18.8566\n\nmin(Carbon)\n\n[1] 42\n\nmax(Carbon)\n\n[1] 90\n\nlength(Carbon)\n\n[1] 7\n\n\nRather than using all of these indiviudally you can use the summary function which gives the minimum, maximum, mean and median values. We will consider the 1st Qu. and 2nd Qu. in the next practical.\n\nsummary(Carbon)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  42.00   52.00   71.00   67.29   82.00   90.00 \n\n\nNote, that it does not calculate the standard deviation, variance or number of observations.\nThat is all we will do in R in this practical. Remember to save your code so you can refer and reuse this for your online quiz and other assessments in the future.\n\n\n\n\n\n\n4. Setting up a project in R and coding in R Markdown\nWorking smartly with your data and code can save you time and tears. We are going to work with projects as this helps manage your data in a clean and easy way. You can either decide to creat a new project for each lab or create one project for the course.\n\nProject\nYour tutors will assist you to get your files organised:\n\nSet up a course folder called ENVX1002files on your desktop/network drive/USB.\nSet up a project called ENVX1002 in your folder.\n\nThe screenshots will help you do this (Figures 1-5).\n\nCreate a folder called ENVX1002 on your laptop or the class computer. If you are using a class computer you will need to save the file to a usb, upload to cloud or email to yourself at the end of the class.\n\n\n\n\nFolder\n\n\n\n\nOpen R Studio go to the file dropdown menu and select New Project\n\n\n\n\nNew project\n\n\n\n\nSelect New directory if you did not do step 1 or Existing directory if you did do step 1.\n\n\n\n\nNew project\n\n\n\n\nOnly do this if you did not do step 1. To create a new Directory brows to an appropriate folder. Name the Directory something like ENVX1002.\n\n\n\n\nNew project name\n\n\n\n\nWell done! you have now set up a project.\n\n\n\n\nNew project name\n\n\n\n\n\nCoding in Quarto\nYour tutor will assist you to open a Quarto (.qmd) file. You will do this for each Lab and your also for your reports:\n\nOpen a qmd file, and save it as, for example, Prac1.qmd.\nRun the file using knit.\nView Prac1.html in a browser.\nNow experiment with editing the file (both text and code chunks) and then re-run using knit.\nUse this file to store your summary of today’s lab work.\n\nThe screenshots will help you do this.\n\nNavigate to New File &gt; Quarto Document\n\n\n\n\nNew Rmarkdown\n\n\n\n\nEnter in an appropriate name for your file such as ENVX1002_prac_1 and enter in your name. Select HTML format.\n\n\n\n\nNew Rmarkdown\n\n\n\n\nWell done! you have created a new R Markdown file. First save your file by navigating to the File menu i.e. File &gt; Save as.\n\n\n\n\nNew Rmarkdown\n\n\n\n\nFinally you can Knit the file by selecting Knit indicated by the blue arrow in the previous figure. A really good exercise is to have the code and generated html code side by side and see what each bit of code has generated.\n\n\n\n\nNew Rmarkdown"
  },
  {
    "objectID": "Lab_01.html#summing-up",
    "href": "Lab_01.html#summing-up",
    "title": "Lab 01",
    "section": "Summing up",
    "text": "Summing up\nWell done!\nYou now know how to:\n\nwrite equations in a word document\ndo basic operations in Excel\ndo basic operations in R and set up a project as well as generate an R Markdown File\n\nTo do by next week:\n\ncomplete anything you have missed from today’s lab\nthe O-quiz (Available from March 1st)"
  }
]